
To build, use CMake (if you have cmake, you can just run ./autogen.sh).
+ http://www.cmake.org

An example for Linux:
  mkdir build
  cd build
  cmake ..
  make
See optional flags that require extra libraries in ccmake/cmake-gui.

To then make python/ruby bindings, first install the development 
libraries for the language of interest (a -dev package). 
Then set Coopy_DIR to the main build directory, and Coopy_ROOT to the 
source directory, and do something like:
  cd $Coopy_ROOT
  mkdir -p build/python
  cd build/python
  cmake -DCREATE_PYTHON=TRUE ../../bindings
  make
  python example.py

========================================================================

To include Gnumeric support, a few more steps are needed.

How to compile:

* Install gnumeric (ideally through your package manager)
  - easy on Linux
  - on MacOSX, see gtk-osx + jhbuild
  - on Windows, see jhbuild scripts for windows build in gnumeric source.
* Install gnumeric source (ideally through your package manager)
* Run "./configure" on your gnumeric source, do anything it needs
  you to do in order to get configured (e.g. installing extra -dev
  packages).  E.g. on Debian, I needed:
    intltool
    libglade2-dev libgtk2.0-dev
    libgoffice-0.8-dev libgsf-1-dev
  You'd need more to compile gnumeric completely, but we're not doing that.
* In the "src" subdirectory of gnumeric source, do 
  "make gnumeric-paths.h".  If having trouble, see next step.
* You may need to take other steps to bring all header files into
  existence.  If you're having trouble, just do "make" in the
  gnumeric source directory.
* When compiling Coopy, turn on "GNUMERIC" flag in ccmake/cmake-gui
* Give path to Gnumeric source in "GNUMERIC_ROOT" in ccmake/cmake-gui

E.g. on Debian:
  apt-get install gnumeric
  apt-get source gnumeric
  cd gnumeric-1.6.3
  ./configure
  apt-get install libxml-perl
  ./configure
  apt-get install libglade2-dev libgnomeprintui2.2-dev
  ./configure
  apt-get install libgsf-1-dev libgoffice-1-dev
  ./configure
  # success! a lot of trouble to go to, given that we won't in fact
  # be compiling the source...
  cd src
  make gnumeric-paths.h
  # Success! We now have all the header files needed.
  # The "../gnumeric-N.N.N" directory will be GNUMERIC_ROOT in coopy ccmake

